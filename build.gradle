apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

def defaultEncoding = 'UTF-8'
tasks.withType(Compile) { options.encoding = defaultEncoding }

ext.jbossHome = hasProperty('jbossHome') ? jbossHome : "/opt/jboss" 

repositories {
    mavenCentral()
    maven { url 'http://public-maven.classmethod.info/release' }
    maven { url 'http://repository.jboss.org/nexus/content/groups/public' }
}

configurations {
    compileOnly
    jmockit
    arqCompile { extendsFrom testCompile } 
    arqRuntime { extendsFrom testRuntime } 
    jbossManaged { extendsFrom arqRuntime }
    jbossRemote  { extendsFrom arqRuntime }
}

dependencies {
    providedCompile 'org.jboss.spec:jboss-javaee-6.0:1.0.0.Final'
    providedCompile 'org.jboss.resteasy:resteasy-jaxrs:2.3.7.Final'
    
    compile 'com.mashape.unirest:unirest-java:1.3.20'
    compile 'org.slf4j:slf4j-log4j12:1.7.7'
    compile 'org.projectlombok:lombok:1.14.4'

    jmockit 'org.jmockit:jmockit:1.9'
    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'jp.classmethod.testing:cmtest-db:0.4'
    testCompile 'org.yaml:snakeyaml:1.13'
    testCompile 'org.dbunit:dbunit:2.5.0'
    testCompile 'commons-io:commons-io:2.1'

    arqCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.5.Final'
    arqCompile 'org.jboss.shrinkwrap.descriptors:shrinkwrap-descriptors-api-javaee:2.0.0-alpha-5'
    arqCompile 'org.jboss.spec:jboss-javaee-6.0:1.0.0.Final'
    arqRuntime 'org.jboss.shrinkwrap.descriptors:shrinkwrap-descriptors-impl-javaee:2.0.0-alpha-5'

    jbossManaged 'org.jboss.as:jboss-as-arquillian-container-managed:7.2.0.Final'
    jbossRemote  'org.jboss.as:jboss-as-arquillian-container-remote:7.2.0.Final'
}

sourceSets {
    test {
        // jmockit を jUnitより先行させる
        compileClasspath = configurations.jmockit + compileClasspath
	runtimeClasspath = configurations.jmockit + runtimeClasspath
    }
    integTest {
        compileClasspath = configurations.jbossManaged + configurations.arqCompile + main.output + compileClasspath
	runtimeClasspath = configurations.jbossManaged + main.output + runtimeClasspath
    }
}

apply plugin: 'jacoco'
jacoco {
    toolVersion = '0.7.1.201405082137'
}

jacocoTestReport {
    reports {
        csv.enabled false
	html.destination 'build/reports/coverage'
    }
}

test {
    // Enclosedテストが 2回実行される現象の回避
    exclude '**/*$*'
}

task jbossManagedTest(type: Test, dependsOn: integTestClasses) {
    environment 'JBOSS_HOME', rootProject.jbossHome
    
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = classpath + configurations.arqCompile + configurations.jbossManaged + sourceSets.integTest.output

    reports.html.destination = file('build/reports/integration_test/report')
    reports.junitXml.destination = file('build/reports/integration_test/result')
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
